name: Deploy to EC2

on:
  push:
    branches:
      - developer # Cambialo por el nombre de la rama que quieras

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Build Docker image
        run: sudo docker build -t project_aws .

      - name: Tag Docker image
        run: docker tag project_aws:latest ${{ secrets.DOCKER_USER }}/project_aws:latest
      
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USER }}/project_aws:latest

      - name: Mostrar contenido del script
        run: cat ./user-data-script.sh

      - name: Ejecutar el script
        run: chmod +x ./user-data-script.sh; ./user-data-script.sh

      - name: SSH into EC2 and restart container
        uses: appleboy/ssh-action@v1.0.3
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USER }}
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PEM_KEY }}
          port: ${{ secrets.AWS_EC2_PORT }}
          script: |
            if ! command -v docker &> /dev/null; then
              echo "Instalando Docker..."
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker $USER
              newgrp docker
            fi
            sudo docker stop project_aws || true
            sudo docker rm project_aws || true
            sudo docker run -d --name project_aws -p 8080:80 nahov/project_aws:latest
